services:
  naming-server:
    env_file:
      - .env
    build: ./naming-server
    ports:
      - "8761:8761"
    networks:
      - my-network

  api-gateway:
    env_file:
      - .env
    build: ./api-gateway
    ports:
      - "8765:8765"
    depends_on:
      - naming-server
    networks:
      - my-network

  resources-db:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_RESOURCES}
    volumes:
      - ./init-scripts/db-resources-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - my-network

  songs-db:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_SONGS}
    volumes:
      - ./init-scripts/db-songs-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - my-network

  resource-service:
    env_file:
      - .env
    build: ./resource-service
    ports:
      - "8080:8080"
    depends_on:
      - resources-db
      - naming-server
    networks:
      - my-network

  song-service:
    env_file:
      - .env
    build: ./song-service
    ports:
      - "8082:8082"
    depends_on:
      - songs-db
      - naming-server
    #deploy:
      #replicas: 2
    networks:
      - my-network

networks:
  my-network: